% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/audit.R
\name{queryAuditLog}
\alias{queryAuditLog}
\title{Query the audit log of a database}
\usage{
queryAuditLog(
  databaseId,
  before = as.numeric(Sys.time()) * 1000,
  resourceId = NULL,
  typeFilter = NULL
)
}
\arguments{
\item{databaseId}{the database identifier.}

\item{before}{a (UNIX) timestamp (in milliseconds) to filter result before a given time; defaults to the time of the
query.}

\item{typeFilter}{a character string with the event type to filter on; default is none.}

\item{resoureId}{a resource (i.e. form or folder) identifier to filter on.}
}
\value{
A data frame with the results of the query and with three attributes as described in the \emph{Details}
section.
}
\description{
Query the audit log of a database
}
\details{
A database audit log contains details on a wide variety of events in the database. These events include the
deletion of records or adding a user. This function queries the audit log and returns the event details as a data
frame. Note that each query returns a maximum of 100 events, therefore the data frame has three attributes to help
you query older log entries:
\itemize{
\item \emph{databaseId}: the database identifier;
\item \emph{moreEvents}: if \code{TRUE} then there are more (older) entries to be queried;
\item \emph{startTime}: the (UNIX) timestamp which is essentially the same as the time provided in the \code{before}
argument of the query;
\item \emph{endTime} the earliest timestamp of the range, which can be used to query the next set of entries.
}
}
\examples{
\dontrun{
# keep querying the audit log until no more events are found:
events <- queryAuditLog("asjdhewhasd", typeFilter = "RECORD")
r <- events
while (isTRUE(attr(r, "moreEvents"))) {
  r <- queryAuditLog("asjdhewhasd", before = attr(r, "endTime"), typeFilter = "RECORD")
  events <- rbind(events, r)
}
}
}
